name: Backend Deployment

on:
  push:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  unit-test:
    name: Unit Tests
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Run Unit tests
        run: |
          cd backend
          mvn clean test -Dgroups=unit

  integration-test:
    name: Integration Tests
    needs:
      - unit-test
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Copy application.properties
        run: |
          cp backend/src/main/resources/application.properties.example backend/src/main/resources/application.properties

      - name: Generate JWT keystore
        run: |
          cd backend/src/main/resources
          keytool -genkeypair \
            -keyalg RSA \
            -validity 365 \
            -alias inholland \
            -keystore inholland.p12 \
            -storetype PKCS12 \
            -storepass yourpassword \
            -keypass yourpassword \
            -dname "CN=inholland, OU=TechSage, O=Inholland, L=City, S=State, C=NL"

      - name: Run Integration tests
        env:
          TURNSTILE_SECRET: ${{ secrets.TURNSTILE_SECRET }}
        run: |
          cd backend
          mvn clean test -Dgroups=integration

  deploy:
    name: Deploy
    needs:
      - unit-test
      - integration-test
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy application.properties
        run: |
          cp backend/src/main/resources/application.properties.example backend/src/main/resources/application.properties

      - name: Generate JWT keystore
        run: |
          cd backend/src/main/resources
          keytool -genkeypair \
            -keyalg RSA \
            -validity 365 \
            -alias inholland \
            -keystore inholland.p12 \
            -storetype PKCS12 \
            -storepass yourpassword \
            -keypass yourpassword \
            -dname "CN=inholland, OU=TechSage, O=Inholland, L=City, S=State, C=NL"

      - name: Build JAR
        run: |
          cd backend
          mvn clean package -DskipTests

      - name: Build Docker image
        env:
          TURNSTILE_SECRET: ${{ secrets.TURNSTILE_SECRET }}
        run: |
          cd backend
          docker build -t springboot-app .

      - name: Run Docker container
        run: |
          cd backend
          docker stop springboot-app || true
          docker rm springboot-app || true
          docker run -d --restart=always --name springboot-app -p 8080:8080 springboot-app
